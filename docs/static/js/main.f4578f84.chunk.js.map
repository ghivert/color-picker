{"version":3,"sources":["App.module.css","helpers/colors.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","constructColor","colorObj","name","hex","substring","r","parseInt","g","b","max","Math","apply","min","chr","hue","val","sat","chroma","luma","red","green","blue","color","colors","1","2","3","4","App","hexArray","useState","level","setLevel","allColors","Object","entries","filter","flatMap","className","styles","root","main","navbar","title","selectorLevel","selectorName","selectorSelect","value","onChange","event","target","colorGrid","map","sort","a","split","colorText","c","rgb","clrs","colorWhite","colorBlack","colorSquare","style","background","border","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4578f84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2h8CC\",\"navbar\":\"App_navbar__3gDlA\",\"sidebar\":\"App_sidebar__1l9Om\",\"main\":\"App_main__3ZkGI\",\"colorGrid\":\"App_colorGrid__3FGHG\",\"colorSquare\":\"App_colorSquare__Z03Fs\",\"colorWhite\":\"App_colorWhite__12MUA\",\"colorBlack\":\"App_colorBlack__uuBfz App_colorWhite__12MUA\",\"selectorLevel\":\"App_selectorLevel__1waeD\",\"title\":\"App_title__-GfWs\",\"selectorName\":\"App_selectorName__20yzN\",\"selectorSelect\":\"App_selectorSelect__gbmd9\"};","const selectCorrectColor = color => {\n  if (color.startsWith('var')) {\n    return window\n      .getComputedStyle(document.documentElement)\n      .getPropertyValue(color.substring(4, color.length - 1))\n      .trim()\n  } else if (color.startsWith('#')) {\n    return color.replace('#', '')\n  } else {\n    return color\n  }\n}\n\nexport const shadeColor = (color, percent) => {\n  const num = parseInt(selectCorrectColor(color), 16)\n  const amt = Math.round(2.55 * percent)\n  const R = (num >> 16) + amt\n  const B = ((num >> 8) & 0x00ff) + amt\n  const G = (num & 0x0000ff) + amt\n  const value = (\n    0x1000000 +\n    (R < 255 ? (R < 1 ? 0 : R) : 255) * 0x10000 +\n    (B < 255 ? (B < 1 ? 0 : B) : 255) * 0x100 +\n    (G < 255 ? (G < 1 ? 0 : G) : 255)\n  )\n    .toString(16)\n    .slice(1)\n  return `#${value}`\n}\n\nexport const isDark = color => {\n  const c = color.substring(1) // strip #\n  const rgb = parseInt(c, 16) // convert rrggbb to decimal\n  const r = (rgb >> 16) & 0xff // extract red\n  const g = (rgb >> 8) & 0xff // extract green\n  const b = (rgb >> 0) & 0xff // extract blue\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b // per ITU-R BT.709\n  return luma < 128\n}\n\nconst constructColor = function (colorObj) {\n  const name = colorObj.name\n  let hex = colorObj.hex.substring(1)\n  /* Get the RGB values to calculate the Hue. */\n  let r = parseInt(hex.substring(0, 2), 16) / 255\n  let g = parseInt(hex.substring(2, 4), 16) / 255\n  let b = parseInt(hex.substring(4, 6), 16) / 255\n\n  /* Getting the Max and Min values for Chroma. */\n  let max = Math.max.apply(Math, [r, g, b])\n  let min = Math.min.apply(Math, [r, g, b])\n\n  /* Variables for HSV value of hex color. */\n  let chr = max - min\n  let hue = 0\n  let val = max\n  let sat = 0\n\n  if (val > 0) {\n    /* Calculate Saturation only if Value isn't 0. */\n    sat = chr / val\n    if (sat > 0) {\n      if (r === max) {\n        hue = 60 * ((g - min - (b - min)) / chr)\n        if (hue < 0) hue += 360\n      } else if (g === max) {\n        hue = 120 + 60 * ((b - min - (r - min)) / chr)\n      } else if (b === max) {\n        hue = 240 + 60 * ((r - min - (g - min)) / chr)\n      }\n    }\n  }\n  const chroma = chr\n  const luma = 0.3 * r + 0.59 * g + 0.11 * b\n  const red = parseInt(hex.substring(0, 2), 16)\n  const green = parseInt(hex.substring(2, 4), 16)\n  const blue = parseInt(hex.substring(4, 6), 16)\n  return { hex, hue, sat, val, chroma, luma, red, green, blue, name }\n}\n\nexport const sort = hexArray => {\n  return hexArray.map(constructColor).sort((a, b) => a.hue - b.hue)\n}\n","import { useState } from 'react'\nimport * as clrs from './helpers/colors'\nimport styles from './App.module.css'\n\nconst color = (name, hex) => ({ name, hex })\n\nconst colors = {\n  1: [\n    color('black', '#000000'),\n    color('silver', '#c0c0c0'),\n    color('gray', '#808080'),\n    color('white', '#ffffff'),\n    color('maroon', '#800000'),\n    color('red', '#ff0000'),\n    color('purple', '#800080'),\n    color('fuchsia', '#ff00ff'),\n    color('green', '#008000'),\n    color('lime', '#00ff00'),\n    color('olive', '#808000'),\n    color('yellow', '#ffff00'),\n    color('navy', '#000080'),\n    color('blue', '#0000ff'),\n    color('teal', '#008080'),\n    color('aqua', '#00ffff'),\n  ],\n  2: [color('orange', '#ffa500')],\n  3: [\n    color('aliceblue', '#f0f8ff'),\n    color('antiquewhite', '#faebd7'),\n    color('aquamarine', '#7fffd4'),\n    color('azure', '#f0ffff'),\n    color('beige', '#f5f5dc'),\n    color('bisque', '#ffe4c4'),\n    color('blanchedalmond', '#ffebcd'),\n    color('blueviolet', '#8a2be2'),\n    color('brown', '#a52a2a'),\n    color('burlywood', '#deb887'),\n    color('cadetblue', '#5f9ea0'),\n    color('chartreuse', '#7fff00'),\n    color('chocolate', '#d2691e'),\n    color('coral', '#ff7f50'),\n    color('cornflowerblue', '#6495ed'),\n    color('cornsilk', '#fff8dc'),\n    color('crimson', '#dc143c'),\n    color('cyan / aqua', '#00ffff'),\n    color('darkblue', '#00008b'),\n    color('darkcyan', '#008b8b'),\n    color('darkgoldenrod', '#b8860b'),\n    color('darkgray', '#a9a9a9'),\n    color('darkgreen', '#006400'),\n    color('darkgrey', '#a9a9a9'),\n    color('darkkhaki', '#bdb76b'),\n    color('darkmagenta', '#8b008b'),\n    color('darkolivegreen', '#556b2f'),\n    color('darkorange', '#ff8c00'),\n    color('darkorchid', '#9932cc'),\n    color('darkred', '#8b0000'),\n    color('darksalmon', '#e9967a'),\n    color('darkseagreen', '#8fbc8f'),\n    color('darkslateblue', '#483d8b'),\n    color('darkslategray', '#2f4f4f'),\n    color('darkslategrey', '#2f4f4f'),\n    color('darkturquoise', '#00ced1'),\n    color('darkviolet', '#9400d3'),\n    color('deeppink', '#ff1493'),\n    color('deepskyblue', '#00bfff'),\n    color('dimgray', '#696969'),\n    color('dimgrey', '#696969'),\n    color('dodgerblue', '#1e90ff'),\n    color('firebrick', '#b22222'),\n    color('floralwhite', '#fffaf0'),\n    color('forestgreen', '#228b22'),\n    color('gainsboro', '#dcdcdc'),\n    color('ghostwhite', '#f8f8ff'),\n    color('gold', '#ffd700'),\n    color('goldenrod', '#daa520'),\n    color('greenyellow', '#adff2f'),\n    color('grey', '#808080'),\n    color('honeydew', '#f0fff0'),\n    color('hotpink', '#ff69b4'),\n    color('indianred', '#cd5c5c'),\n    color('indigo', '#4b0082'),\n    color('ivory', '#fffff0'),\n    color('khaki', '#f0e68c'),\n    color('lavender', '#e6e6fa'),\n    color('lavenderblush', '#fff0f5'),\n    color('lawngreen', '#7cfc00'),\n    color('lemonchiffon', '#fffacd'),\n    color('lightblue', '#add8e6'),\n    color('lightcoral', '#f08080'),\n    color('lightcyan', '#e0ffff'),\n    color('lightgoldenrodyellow', '#fafad2'),\n    color('lightgray', '#d3d3d3'),\n    color('lightgreen', '#90ee90'),\n    color('lightgrey', '#d3d3d3'),\n    color('lightpink', '#ffb6c1'),\n    color('lightsalmon', '#ffa07a'),\n    color('lightseagreen', '#20b2aa'),\n    color('lightskyblue', '#87cefa'),\n    color('lightslategray', '#778899'),\n    color('lightslategrey', '#778899'),\n    color('lightsteelblue', '#b0c4de'),\n    color('lightyellow', '#ffffe0'),\n    color('limegreen', '#32cd32'),\n    color('linen', '#faf0e6'),\n    color('magenta / fuchsia', '#ff00ff'),\n    color('mediumaquamarine', '#66cdaa'),\n    color('mediumblue', '#0000cd'),\n    color('mediumorchid', '#ba55d3'),\n    color('mediumpurple', '#9370db'),\n    color('mediumseagreen', '#3cb371'),\n    color('mediumslateblue', '#7b68ee'),\n    color('mediumspringgreen', '#00fa9a'),\n    color('mediumturquoise', '#48d1cc'),\n    color('mediumvioletred', '#c71585'),\n    color('midnightblue', '#191970'),\n    color('mintcream', '#f5fffa'),\n    color('mistyrose', '#ffe4e1'),\n    color('moccasin', '#ffe4b5'),\n    color('navajowhite', '#ffdead'),\n    color('oldlace', '#fdf5e6'),\n    color('olivedrab', '#6b8e23'),\n    color('orangered', '#ff4500'),\n    color('orchid', '#da70d6'),\n    color('palegoldenrod', '#eee8aa'),\n    color('palegreen', '#98fb98'),\n    color('paleturquoise', '#afeeee'),\n    color('palevioletred', '#db7093'),\n    color('papayawhip', '#ffefd5'),\n    color('peachpuff', '#ffdab9'),\n    color('peru', '#cd853f'),\n    color('pink', '#ffc0cb'),\n    color('plum', '#dda0dd'),\n    color('powderblue', '#b0e0e6'),\n    color('rosybrown', '#bc8f8f'),\n    color('royalblue', '#4169e1'),\n    color('saddlebrown', '#8b4513'),\n    color('salmon', '#fa8072'),\n    color('sandybrown', '#f4a460'),\n    color('seagreen', '#2e8b57'),\n    color('seashell', '#fff5ee'),\n    color('sienna', '#a0522d'),\n    color('skyblue', '#87ceeb'),\n    color('slateblue', '#6a5acd'),\n    color('slategray', '#708090'),\n    color('slategrey', '#708090'),\n    color('snow', '#fffafa'),\n    color('springgreen', '#00ff7f'),\n    color('steelblue', '#4682b4'),\n    color('tan', '#d2b48c'),\n    color('thistle', '#d8bfd8'),\n    color('tomato', '#ff6347'),\n    color('turquoise', '#40e0d0'),\n    color('violet', '#ee82ee'),\n    color('wheat', '#f5deb3'),\n    color('whitesmoke', '#f5f5f5'),\n    color('yellowgreen', '#9acd32'),\n  ],\n  4: color('rebeccapurple', '#663399'),\n}\n\nconst App = () => {\n  const [level, setLevel] = useState(4)\n  const allColors = Object.entries(colors)\n    .filter(([key]) => key <= level)\n    .flatMap(([_, clrs]) => clrs)\n  // <nav className={styles.sidebar}>side</nav>\n  return (\n    <div className={styles.root}>\n      <main className={styles.main}>\n        <nav className={styles.navbar}>\n          <div className={styles.title}>Color Picker</div>\n          <div className={styles.selectorLevel}>\n            <div className={styles.selectorName}>CSS Level</div>\n            <select\n              className={styles.selectorSelect}\n              value={level}\n              onChange={event => setLevel(event.target.value)}\n            >\n              <option value={1}>1</option>\n              <option value={2}>2</option>\n              <option value={3}>3</option>\n              <option value={4}>4</option>\n            </select>\n          </div>\n        </nav>\n        <div className={styles.colorGrid}>\n          {clrs.sort(allColors).map(color => {\n            const [name] = color.name.split('/')\n            const colorText = clrs.isDark(color.hex)\n              ? styles.colorWhite\n              : styles.colorBlack\n            return (\n              <div\n                className={styles.colorSquare}\n                style={{\n                  background: name,\n                  border: `1px solid ${color.hex}`,\n                }}\n              >\n                <div className={colorText}>{color.name}</div>\n                <div className={colorText}>{color.hex}</div>\n              </div>\n            )\n          })}\n        </div>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}